{"ast":null,"code":"import{createClient}from\"contentful\";const client=createClient({space:process.env.REACT_APP_CONTENTFUL_SPACE_ID,accessToken:process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN});export const fetchMainCategories=async()=>{try{const response=await client.getEntries({content_type:\"mainCategory\"// Main Category'nin Contentful'daki ID'si\n});return response.items;}catch(error){console.error(\"Ana kategoriler alınamadı:\",error);throw error;}};export const fetchSubCategories=async mainCategoryId=>{try{const response=await client.getEntries({content_type:\"mainCategory\",// Main Category'nin Contentful'daki ID'si\n\"sys.id\":mainCategoryId,// Main Category'nin ID'si\nselect:\"fields.sub_categories\"// Sadece sub_categories alanını çek\n});const subCategoryIds=response.items[0].fields.sub_categories.map(ref=>ref.sys.id);const subCategories=await client.getEntries({content_type:\"sub_categories\",// Sub Categories'nin Contentful'daki ID'si\n\"sys.id[in]\":subCategoryIds.join(\",\")});return subCategories.items;}catch(error){console.error(\"Alt kategoriler alınamadı:\",error);throw error;}};export const fetchProducts=async subCategoryId=>{try{var _subCategoryResponse$,_subCategoryResponse$2;// Alt kategoriyi al\nconst subCategoryResponse=await client.getEntries({content_type:\"sub_categories\",// Sub Categories içerik modelinin ID'si\n\"sys.id\":subCategoryId,// Sub Category'nin ID'si\nselect:\"fields.products\"// Sadece products alanını çek\n});// Gelen yanıtı kontrol et\nif(!subCategoryResponse.items||subCategoryResponse.items.length===0){console.error(\"Alt kategori bulunamadı.\");return[];}// Products ID'lerini al\nconst productIds=(_subCategoryResponse$=subCategoryResponse.items[0])===null||_subCategoryResponse$===void 0?void 0:(_subCategoryResponse$2=_subCategoryResponse$.fields.products)===null||_subCategoryResponse$2===void 0?void 0:_subCategoryResponse$2.map(ref=>ref.sys.id);if(!productIds||productIds.length===0){console.error(\"Ürünler bulunamadı.\");return[];}// Products öğelerini al\nconst productsResponse=await client.getEntries({content_type:\"products\",// Products içerik modelinin ID'si\n\"sys.id[in]\":productIds.join(\",\")// Products ID'lerini sorgula\n});return productsResponse.items;}catch(error){console.error(\"Ürünler alınamadı:\",error);throw error;}};","map":{"version":3,"names":["createClient","client","space","process","env","REACT_APP_CONTENTFUL_SPACE_ID","accessToken","REACT_APP_CONTENTFUL_ACCESS_TOKEN","fetchMainCategories","response","getEntries","content_type","items","error","console","fetchSubCategories","mainCategoryId","select","subCategoryIds","fields","sub_categories","map","ref","sys","id","subCategories","join","fetchProducts","subCategoryId","_subCategoryResponse$","_subCategoryResponse$2","subCategoryResponse","length","productIds","products","productsResponse"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/ETA-TRADE/src/contentfulClient.js"],"sourcesContent":["import { createClient } from \"contentful\";\n\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nexport const fetchMainCategories = async () => {\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\", // Main Category'nin Contentful'daki ID'si\n    });\n    return response.items;\n  } catch (error) {\n    console.error(\"Ana kategoriler alınamadı:\", error);\n    throw error;\n  }\n};\n\nexport const fetchSubCategories = async (mainCategoryId) => {\n    try {\n      const response = await client.getEntries({\n        content_type: \"mainCategory\", // Main Category'nin Contentful'daki ID'si\n        \"sys.id\": mainCategoryId, // Main Category'nin ID'si\n        select: \"fields.sub_categories\", // Sadece sub_categories alanını çek\n      });\n  \n      const subCategoryIds = response.items[0].fields.sub_categories.map(\n        (ref) => ref.sys.id\n      );\n  \n      const subCategories = await client.getEntries({\n        content_type: \"sub_categories\", // Sub Categories'nin Contentful'daki ID'si\n        \"sys.id[in]\": subCategoryIds.join(\",\"),\n      });\n  \n      return subCategories.items;\n    } catch (error) {\n      console.error(\"Alt kategoriler alınamadı:\", error);\n      throw error;\n    }\n  };\n  \n  export const fetchProducts = async (subCategoryId) => {\n    try {\n      // Alt kategoriyi al\n      const subCategoryResponse = await client.getEntries({\n        content_type: \"sub_categories\", // Sub Categories içerik modelinin ID'si\n        \"sys.id\": subCategoryId, // Sub Category'nin ID'si\n        select: \"fields.products\", // Sadece products alanını çek\n      });\n  \n      // Gelen yanıtı kontrol et\n      if (!subCategoryResponse.items || subCategoryResponse.items.length === 0) {\n        console.error(\"Alt kategori bulunamadı.\");\n        return [];\n      }\n  \n      // Products ID'lerini al\n      const productIds = subCategoryResponse.items[0]?.fields.products?.map(\n        (ref) => ref.sys.id\n      );\n  \n      if (!productIds || productIds.length === 0) {\n        console.error(\"Ürünler bulunamadı.\");\n        return [];\n      }\n  \n      // Products öğelerini al\n      const productsResponse = await client.getEntries({\n        content_type: \"products\", // Products içerik modelinin ID'si\n        \"sys.id[in]\": productIds.join(\",\"), // Products ID'lerini sorgula\n      });\n  \n      return productsResponse.items;\n    } catch (error) {\n      console.error(\"Ürünler alınamadı:\", error);\n      throw error;\n    }\n  };\n  \n  \n  \n  \n  \n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,YAAY,CAEzC,KAAM,CAAAC,MAAM,CAAGD,YAAY,CAAC,CAC1BE,KAAK,CAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CAChDC,WAAW,CAAEH,OAAO,CAACC,GAAG,CAACG,iCAC3B,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CAC7C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,MAAM,CAACS,UAAU,CAAC,CACvCC,YAAY,CAAE,cAAgB;AAChC,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CAACG,KAAK,CACvB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,kBAAkB,CAAG,KAAO,CAAAC,cAAc,EAAK,CACxD,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAR,MAAM,CAACS,UAAU,CAAC,CACvCC,YAAY,CAAE,cAAc,CAAE;AAC9B,QAAQ,CAAEK,cAAc,CAAE;AAC1BC,MAAM,CAAE,uBAAyB;AACnC,CAAC,CAAC,CAEF,KAAM,CAAAC,cAAc,CAAGT,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAACO,MAAM,CAACC,cAAc,CAACC,GAAG,CAC/DC,GAAG,EAAKA,GAAG,CAACC,GAAG,CAACC,EACnB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAxB,MAAM,CAACS,UAAU,CAAC,CAC5CC,YAAY,CAAE,gBAAgB,CAAE;AAChC,YAAY,CAAEO,cAAc,CAACQ,IAAI,CAAC,GAAG,CACvC,CAAC,CAAC,CAEF,MAAO,CAAAD,aAAa,CAACb,KAAK,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAc,aAAa,CAAG,KAAO,CAAAC,aAAa,EAAK,CACpD,GAAI,KAAAC,qBAAA,CAAAC,sBAAA,CACF;AACA,KAAM,CAAAC,mBAAmB,CAAG,KAAM,CAAA9B,MAAM,CAACS,UAAU,CAAC,CAClDC,YAAY,CAAE,gBAAgB,CAAE;AAChC,QAAQ,CAAEiB,aAAa,CAAE;AACzBX,MAAM,CAAE,iBAAmB;AAC7B,CAAC,CAAC,CAEF;AACA,GAAI,CAACc,mBAAmB,CAACnB,KAAK,EAAImB,mBAAmB,CAACnB,KAAK,CAACoB,MAAM,GAAK,CAAC,CAAE,CACxElB,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAC,CACzC,MAAO,EAAE,CACX,CAEA;AACA,KAAM,CAAAoB,UAAU,EAAAJ,qBAAA,CAAGE,mBAAmB,CAACnB,KAAK,CAAC,CAAC,CAAC,UAAAiB,qBAAA,kBAAAC,sBAAA,CAA5BD,qBAAA,CAA8BV,MAAM,CAACe,QAAQ,UAAAJ,sBAAA,iBAA7CA,sBAAA,CAA+CT,GAAG,CAClEC,GAAG,EAAKA,GAAG,CAACC,GAAG,CAACC,EACnB,CAAC,CAED,GAAI,CAACS,UAAU,EAAIA,UAAU,CAACD,MAAM,GAAK,CAAC,CAAE,CAC1ClB,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC,CACpC,MAAO,EAAE,CACX,CAEA;AACA,KAAM,CAAAsB,gBAAgB,CAAG,KAAM,CAAAlC,MAAM,CAACS,UAAU,CAAC,CAC/CC,YAAY,CAAE,UAAU,CAAE;AAC1B,YAAY,CAAEsB,UAAU,CAACP,IAAI,CAAC,GAAG,CAAG;AACtC,CAAC,CAAC,CAEF,MAAO,CAAAS,gBAAgB,CAACvB,KAAK,CAC/B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}