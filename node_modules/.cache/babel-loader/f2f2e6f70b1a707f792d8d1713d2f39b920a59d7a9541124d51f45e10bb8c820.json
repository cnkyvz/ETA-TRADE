{"ast":null,"code":"//src/contentfulDynamicLoader.js\nimport { createClient } from \"contentful\";\nimport i18n from \"i18next\";\n\n// Contentful client\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN\n});\nconst localeMap = {\n  en: \"en-US\",\n  ar: \"ar\",\n  tr: \"en-US\" // Türkçe locale yok, fallback\n};\nexport const loadCategoryTranslations = async lang => {\n  const locale = localeMap[lang] || \"en-US\";\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\",\n      locale\n    });\n    const categoriesList = {};\n    response.items.forEach(item => {\n      const name = item.fields.main_category_name;\n      categoriesList[name] = name; // Gerekirse çeviri eşlemesi burada yapılır\n    });\n\n    // Runtime'da i18n'e ekle\n    i18n.addResourceBundle(lang, \"projects\", {\n      categoriesList\n    }, true, true);\n    console.log(`✅ i18next'e \"${lang}\" için Contentful kategori verisi eklendi.`);\n  } catch (error) {\n    console.error(\"❌ Contentful'dan çeviri verisi çekilemedi:\", error);\n  }\n};","map":{"version":3,"names":["createClient","i18n","client","space","process","env","REACT_APP_CONTENTFUL_SPACE_ID","accessToken","REACT_APP_CONTENTFUL_ACCESS_TOKEN","localeMap","en","ar","tr","loadCategoryTranslations","lang","locale","response","getEntries","content_type","categoriesList","items","forEach","item","name","fields","main_category_name","addResourceBundle","console","log","error"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/ETA-TRADE/src/contentfulDynamicLoader.js"],"sourcesContent":["//src/contentfulDynamicLoader.js\nimport { createClient } from \"contentful\";\nimport i18n from \"i18next\";\n\n// Contentful client\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nconst localeMap = {\n  en: \"en-US\",\n  ar: \"ar\",\n  tr: \"en-US\", // Türkçe locale yok, fallback\n};\n\nexport const loadCategoryTranslations = async (lang) => {\n  const locale = localeMap[lang] || \"en-US\";\n\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\",\n      locale,\n    });\n\n    const categoriesList = {};\n    response.items.forEach((item) => {\n      const name = item.fields.main_category_name;\n      categoriesList[name] = name; // Gerekirse çeviri eşlemesi burada yapılır\n    });\n\n    // Runtime'da i18n'e ekle\n    i18n.addResourceBundle(lang, \"projects\", {\n      categoriesList,\n    }, true, true);\n\n    console.log(`✅ i18next'e \"${lang}\" için Contentful kategori verisi eklendi.`);\n  } catch (error) {\n    console.error(\"❌ Contentful'dan çeviri verisi çekilemedi:\", error);\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,YAAY;AACzC,OAAOC,IAAI,MAAM,SAAS;;AAE1B;AACA,MAAMC,MAAM,GAAGF,YAAY,CAAC;EAC1BG,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EAChDC,WAAW,EAAEH,OAAO,CAACC,GAAG,CAACG;AAC3B,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,OAAO,CAAE;AACf,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,IAAI,IAAK;EACtD,MAAMC,MAAM,GAAGN,SAAS,CAACK,IAAI,CAAC,IAAI,OAAO;EAEzC,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMd,MAAM,CAACe,UAAU,CAAC;MACvCC,YAAY,EAAE,cAAc;MAC5BH;IACF,CAAC,CAAC;IAEF,MAAMI,cAAc,GAAG,CAAC,CAAC;IACzBH,QAAQ,CAACI,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC/B,MAAMC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAACC,kBAAkB;MAC3CN,cAAc,CAACI,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACAtB,IAAI,CAACyB,iBAAiB,CAACZ,IAAI,EAAE,UAAU,EAAE;MACvCK;IACF,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAEdQ,OAAO,CAACC,GAAG,CAAC,gBAAgBd,IAAI,4CAA4C,CAAC;EAC/E,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}