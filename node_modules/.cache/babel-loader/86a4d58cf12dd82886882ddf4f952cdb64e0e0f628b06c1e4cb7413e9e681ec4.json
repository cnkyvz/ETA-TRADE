{"ast":null,"code":"import { createClient } from \"contentful\";\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN\n});\nexport const fetchMainCategories = async (locale = \"en-US\") => {\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\",\n      locale\n    });\n    return response.items;\n  } catch (error) {\n    console.error(\"Ana kategoriler alınamadı:\", error);\n    throw error;\n  }\n};\nexport const fetchSubCategories = async mainCategoryId => {\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\",\n      // Main Category'nin Contentful'daki ID'si\n      \"sys.id\": mainCategoryId,\n      // Main Category'nin ID'si\n      select: \"fields.sub_categories\" // Sadece sub_categories alanını çek\n    });\n    const subCategoryIds = response.items[0].fields.sub_categories.map(ref => ref.sys.id);\n    const subCategories = await client.getEntries({\n      content_type: \"sub_categories\",\n      // Sub Categories'nin Contentful'daki ID'si\n      \"sys.id[in]\": subCategoryIds.join(\",\")\n    });\n    return subCategories.items;\n  } catch (error) {\n    console.error(\"Alt kategoriler alınamadı:\", error);\n    throw error;\n  }\n};\nexport const fetchProducts = async subCategoryId => {\n  try {\n    var _subCategoryResponse$, _subCategoryResponse$2;\n    // Alt kategoriyi al\n    const subCategoryResponse = await client.getEntries({\n      content_type: \"sub_categories\",\n      // Sub Categories içerik modelinin ID'si\n      \"sys.id\": subCategoryId,\n      // Sub Category'nin ID'si\n      select: \"fields.products\" // Sadece products alanını çek\n    });\n\n    // Gelen yanıtı kontrol et\n    if (!subCategoryResponse.items || subCategoryResponse.items.length === 0) {\n      console.error(\"Alt kategori bulunamadı.\");\n      return [];\n    }\n\n    // Products ID'lerini al\n    const productIds = (_subCategoryResponse$ = subCategoryResponse.items[0]) === null || _subCategoryResponse$ === void 0 ? void 0 : (_subCategoryResponse$2 = _subCategoryResponse$.fields.products) === null || _subCategoryResponse$2 === void 0 ? void 0 : _subCategoryResponse$2.map(ref => ref.sys.id);\n    if (!productIds || productIds.length === 0) {\n      console.error(\"Ürünler bulunamadı.\");\n      return [];\n    }\n\n    // Products öğelerini al\n    const productsResponse = await client.getEntries({\n      content_type: \"products\",\n      // Products içerik modelinin ID'si\n      \"sys.id[in]\": productIds.join(\",\") // Products ID'lerini sorgula\n    });\n    return productsResponse.items;\n  } catch (error) {\n    console.error(\"Ürünler alınamadı:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["createClient","client","space","process","env","REACT_APP_CONTENTFUL_SPACE_ID","accessToken","REACT_APP_CONTENTFUL_ACCESS_TOKEN","fetchMainCategories","locale","response","getEntries","content_type","items","error","console","fetchSubCategories","mainCategoryId","select","subCategoryIds","fields","sub_categories","map","ref","sys","id","subCategories","join","fetchProducts","subCategoryId","_subCategoryResponse$","_subCategoryResponse$2","subCategoryResponse","length","productIds","products","productsResponse"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/ETA-TRADE/src/contentfulClient.js"],"sourcesContent":["import { createClient } from \"contentful\";\n\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nexport const fetchMainCategories = async (locale = \"en-US\") => {\n  try {\n    const response = await client.getEntries({\n      content_type: \"mainCategory\",\n      locale,\n    });\n    return response.items;\n  } catch (error) {\n    console.error(\"Ana kategoriler alınamadı:\", error);\n    throw error;\n  }\n};\n\n\n\nexport const fetchSubCategories = async (mainCategoryId) => {\n    try {\n      const response = await client.getEntries({\n        content_type: \"mainCategory\", // Main Category'nin Contentful'daki ID'si\n        \"sys.id\": mainCategoryId, // Main Category'nin ID'si\n        select: \"fields.sub_categories\", // Sadece sub_categories alanını çek\n      });\n  \n      const subCategoryIds = response.items[0].fields.sub_categories.map(\n        (ref) => ref.sys.id\n      );\n  \n      const subCategories = await client.getEntries({\n        content_type: \"sub_categories\", // Sub Categories'nin Contentful'daki ID'si\n        \"sys.id[in]\": subCategoryIds.join(\",\"),\n      });\n  \n      return subCategories.items;\n    } catch (error) {\n      console.error(\"Alt kategoriler alınamadı:\", error);\n      throw error;\n    }\n  };\n  \n  export const fetchProducts = async (subCategoryId) => {\n    try {\n      // Alt kategoriyi al\n      const subCategoryResponse = await client.getEntries({\n        content_type: \"sub_categories\", // Sub Categories içerik modelinin ID'si\n        \"sys.id\": subCategoryId, // Sub Category'nin ID'si\n        select: \"fields.products\", // Sadece products alanını çek\n      });\n  \n      // Gelen yanıtı kontrol et\n      if (!subCategoryResponse.items || subCategoryResponse.items.length === 0) {\n        console.error(\"Alt kategori bulunamadı.\");\n        return [];\n      }\n  \n      // Products ID'lerini al\n      const productIds = subCategoryResponse.items[0]?.fields.products?.map(\n        (ref) => ref.sys.id\n      );\n  \n      if (!productIds || productIds.length === 0) {\n        console.error(\"Ürünler bulunamadı.\");\n        return [];\n      }\n  \n      // Products öğelerini al\n      const productsResponse = await client.getEntries({\n        content_type: \"products\", // Products içerik modelinin ID'si\n        \"sys.id[in]\": productIds.join(\",\"), // Products ID'lerini sorgula\n      });\n  \n      return productsResponse.items;\n    } catch (error) {\n      console.error(\"Ürünler alınamadı:\", error);\n      throw error;\n    }\n  };\n  \n  \n  \n  \n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}