{"ast":null,"code":"export class AbortError extends Error {\n  constructor() {\n    super('Throttled function aborted');\n    this.name = 'AbortError';\n  }\n}\nexport default function pThrottle({\n  limit,\n  interval,\n  strict,\n  onDelay\n}) {\n  if (!Number.isFinite(limit)) {\n    throw new TypeError('Expected `limit` to be a finite number');\n  }\n  if (!Number.isFinite(interval)) {\n    throw new TypeError('Expected `interval` to be a finite number');\n  }\n  const queue = new Map();\n  let currentTick = 0;\n  let activeCount = 0;\n  function windowedDelay() {\n    const now = Date.now();\n    if (now - currentTick > interval) {\n      activeCount = 1;\n      currentTick = now;\n      return 0;\n    }\n    if (activeCount < limit) {\n      activeCount++;\n    } else {\n      currentTick += interval;\n      activeCount = 1;\n    }\n    return currentTick - now;\n  }\n  const strictTicks = [];\n  function strictDelay() {\n    const now = Date.now();\n\n    // Clear the queue if there's a significant delay since the last execution\n    if (strictTicks.length > 0 && now - strictTicks.at(-1) > interval) {\n      strictTicks.length = 0;\n    }\n\n    // If the queue is not full, add the current time and execute immediately\n    if (strictTicks.length < limit) {\n      strictTicks.push(now);\n      return 0;\n    }\n\n    // Calculate the next execution time based on the first item in the queue\n    const nextExecutionTime = strictTicks[0] + interval;\n\n    // Shift the queue and add the new execution time\n    strictTicks.shift();\n    strictTicks.push(nextExecutionTime);\n\n    // Calculate the delay for the current execution\n    return Math.max(0, nextExecutionTime - now);\n  }\n  const getDelay = strict ? strictDelay : windowedDelay;\n  return function_ => {\n    const throttled = function (...arguments_) {\n      if (!throttled.isEnabled) {\n        return (async () => function_.apply(this, arguments_))();\n      }\n      let timeoutId;\n      return new Promise((resolve, reject) => {\n        const execute = () => {\n          resolve(function_.apply(this, arguments_));\n          queue.delete(timeoutId);\n        };\n        const delay = getDelay();\n        if (delay > 0) {\n          timeoutId = setTimeout(execute, delay);\n          queue.set(timeoutId, reject);\n          onDelay?.(...arguments_);\n        } else {\n          execute();\n        }\n      });\n    };\n    throttled.abort = () => {\n      for (const timeout of queue.keys()) {\n        clearTimeout(timeout);\n        queue.get(timeout)(new AbortError());\n      }\n      queue.clear();\n      strictTicks.splice(0, strictTicks.length);\n    };\n    throttled.isEnabled = true;\n    Object.defineProperty(throttled, 'queueSize', {\n      get() {\n        return queue.size;\n      }\n    });\n    return throttled;\n  };\n}","map":{"version":3,"names":["AbortError","Error","constructor","name","pThrottle","limit","interval","strict","onDelay","Number","isFinite","TypeError","queue","Map","currentTick","activeCount","windowedDelay","now","Date","strictTicks","strictDelay","length","at","push","nextExecutionTime","shift","Math","max","getDelay","function_","throttled","arguments_","isEnabled","apply","timeoutId","Promise","resolve","reject","execute","delete","delay","setTimeout","set","abort","timeout","keys","clearTimeout","get","clear","splice","Object","defineProperty","size"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/ETA-TRADE/node_modules/p-throttle/index.js"],"sourcesContent":["export class AbortError extends Error {\n\tconstructor() {\n\t\tsuper('Throttled function aborted');\n\t\tthis.name = 'AbortError';\n\t}\n}\n\nexport default function pThrottle({limit, interval, strict, onDelay}) {\n\tif (!Number.isFinite(limit)) {\n\t\tthrow new TypeError('Expected `limit` to be a finite number');\n\t}\n\n\tif (!Number.isFinite(interval)) {\n\t\tthrow new TypeError('Expected `interval` to be a finite number');\n\t}\n\n\tconst queue = new Map();\n\n\tlet currentTick = 0;\n\tlet activeCount = 0;\n\n\tfunction windowedDelay() {\n\t\tconst now = Date.now();\n\n\t\tif ((now - currentTick) > interval) {\n\t\t\tactiveCount = 1;\n\t\t\tcurrentTick = now;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (activeCount < limit) {\n\t\t\tactiveCount++;\n\t\t} else {\n\t\t\tcurrentTick += interval;\n\t\t\tactiveCount = 1;\n\t\t}\n\n\t\treturn currentTick - now;\n\t}\n\n\tconst strictTicks = [];\n\n\tfunction strictDelay() {\n\t\tconst now = Date.now();\n\n\t\t// Clear the queue if there's a significant delay since the last execution\n\t\tif (strictTicks.length > 0 && now - strictTicks.at(-1) > interval) {\n\t\t\tstrictTicks.length = 0;\n\t\t}\n\n\t\t// If the queue is not full, add the current time and execute immediately\n\t\tif (strictTicks.length < limit) {\n\t\t\tstrictTicks.push(now);\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Calculate the next execution time based on the first item in the queue\n\t\tconst nextExecutionTime = strictTicks[0] + interval;\n\n\t\t// Shift the queue and add the new execution time\n\t\tstrictTicks.shift();\n\t\tstrictTicks.push(nextExecutionTime);\n\n\t\t// Calculate the delay for the current execution\n\t\treturn Math.max(0, nextExecutionTime - now);\n\t}\n\n\tconst getDelay = strict ? strictDelay : windowedDelay;\n\n\treturn function_ => {\n\t\tconst throttled = function (...arguments_) {\n\t\t\tif (!throttled.isEnabled) {\n\t\t\t\treturn (async () => function_.apply(this, arguments_))();\n\t\t\t}\n\n\t\t\tlet timeoutId;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst execute = () => {\n\t\t\t\t\tresolve(function_.apply(this, arguments_));\n\t\t\t\t\tqueue.delete(timeoutId);\n\t\t\t\t};\n\n\t\t\t\tconst delay = getDelay();\n\t\t\t\tif (delay > 0) {\n\t\t\t\t\ttimeoutId = setTimeout(execute, delay);\n\t\t\t\t\tqueue.set(timeoutId, reject);\n\t\t\t\t\tonDelay?.(...arguments_);\n\t\t\t\t} else {\n\t\t\t\t\texecute();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthrottled.abort = () => {\n\t\t\tfor (const timeout of queue.keys()) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tqueue.get(timeout)(new AbortError());\n\t\t\t}\n\n\t\t\tqueue.clear();\n\t\t\tstrictTicks.splice(0, strictTicks.length);\n\t\t};\n\n\t\tthrottled.isEnabled = true;\n\n\t\tObject.defineProperty(throttled, 'queueSize', {\n\t\t\tget() {\n\t\t\t\treturn queue.size;\n\t\t\t},\n\t\t});\n\n\t\treturn throttled;\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}